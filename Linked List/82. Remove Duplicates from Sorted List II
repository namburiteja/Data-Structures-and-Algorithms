/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if(head==null || head.next==null) return head;
        HashMap<Integer,Integer> hm = new HashMap<>();
        ListNode curr = head;
        while(curr!=null){
            if(!hm.containsKey(curr.val)){
                hm.put(curr.val,1);
            }
            else{
                hm.put(curr.val,hm.get(curr.val)+1);
            }
            curr = curr.next;
        }
        ArrayList<Integer> arr = new ArrayList<>();
        for(int i:hm.keySet()){
            if(hm.get(i)==1){
                arr.add(i);
            }   
        }
        Collections.sort(arr);
        if(arr.size()==0){
            return null;
        }
        ListNode headed = new ListNode(arr.get(0));
        ListNode headed2 = headed;
        for(int i=1;i<arr.size();i++){
            ListNode new_node = new ListNode(arr.get(i));
            headed2.next = new_node;
            headed2 = headed2.next;
        }
        return headed;
    }
}
