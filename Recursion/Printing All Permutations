import java.util.*;
class Main {
    public static void permutations(int[] arr,ArrayList<ArrayList<Integer>> ans,ArrayList<Integer> ds,boolean[] freq){
        if(ds.size()==arr.length){
            ans.add(new ArrayList<>(ds));
            return;
        }
        for(int i=0;i<arr.length;i++){
            if(!freq[i]){
                ds.add(arr[i]);
                freq[i] = true;
                permutations(arr,ans,ds,freq);
                ds.remove(ds.size()-1);
                freq[i] = false;
            }
        }
    }
    public static void main(String[] args) {
        int[] arr = {1,2,3};
        ArrayList<ArrayList<Integer>> ans = new ArrayList<>();
        ArrayList<Integer> ds = new ArrayList<>();
        boolean[] freq = new boolean[arr.length];
        permutations(arr,ans,ds,freq);
        System.out.print(ans);
    }
}
Time Complexity - O(n*n!)
Space Complexity - O(n*n!)
