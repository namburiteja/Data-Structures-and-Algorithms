class Solution {
    public int[] nextGreaterElements(int[] nums) {
        int n = nums.length;
        int nge[] = new int[n];
        Stack<Integer> st = new Stack<>();
        for(int i=2*n-1;i>=0;i--){
            while(!st.isEmpty() && st.peek()<=nums[i%n]){
                st.pop();
            }
            if(i<n){
                if(!st.isEmpty()){
                    nge[i] = st.peek();
                }
                else{
                    nge[i] = -1;
                }
            }
            st.push(nums[i%n]);
        }
        return nge;
    }
}
FOR CLEAR EXPLANATION, INTUTION, APPROACH AND TIME-SPACE COMPLEXITY -
https://leetcode.com/problems/next-greater-element-ii/solutions/6877313/easy-solution-java-using-monotonic-stack-mgws/
