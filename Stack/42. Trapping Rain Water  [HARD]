class Solution {
    public int trap(int[] height) {
        int n = height.length;
        int[] mini = new int[n];
        int[] maxi = new int[n];
        mini[0] = height[0];
        for(int i=1;i<n;i++){
            mini[i] = Math.max(height[i],mini[i-1]);
        }
        maxi[n-1] = height[n-1];
        for(int i=n-2;i>=0;i--){
            maxi[i] = Math.max(height[i],maxi[i+1]);
        }
        int ans = 0;
        for(int i=0;i<n;i++){
            ans+=Math.min(maxi[i],mini[i])-height[i];
        }
        return ans;
    }
}
FOR CLEAR EXPLANATION, INTUTION, APPROACH AND TIME-SPACE COMPLEXITY -
https://leetcode.com/problems/trapping-rain-water/solutions/7123442/easy-solution-on-java-by-teja_namburi04-57d2/
