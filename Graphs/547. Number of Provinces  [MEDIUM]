class Solution {
    static void bfs(int start,int[][] arr,boolean[] visited){
        Queue<Integer> q = new LinkedList<>();
        q.add(start);
        visited[start] = true;
        while(!q.isEmpty()){
            int x = q.poll();
            for(int i=0;i<arr.length;i++){
                if(arr[x][i]==1 && visited[i]==false){
                    q.offer(i);
                    visited[i] = true;
                }
            }
        }
    }
    public int findCircleNum(int[][] isConnected) {
        int provinces = 0;
        int n = isConnected.length;
        boolean[] visited = new boolean[n];
        for(int i=0;i<n;i++){
            if(visited[i]==false){
                bfs(i,isConnected,visited);
                provinces++;
            }
        }
        return provinces;
    }
}
