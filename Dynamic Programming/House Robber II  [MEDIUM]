class Solution {
    public int robbing(int[] nums){
        int zero = nums[0];
        int one = 0;
        for(int i=1;i<nums.length;i++){
            int take = nums[i];
            take+= i>1 ? one : 0;
            int nottake = zero;
            int curr = Math.max(take,nottake);
            one = zero;
            zero = curr;
        }
        return zero;
    }
    public int rob(int[] nums) {
        int n = nums.length;
        if(n==1) return nums[0];
        int[] n1 = new int[n-1];
        int[] n2 = new int[n-1];
        for(int i=0;i<n-1;i++){
            n1[i] = nums[i];
        }
        for(int i=1;i<n;i++){
            n2[i-1] = nums[i];
        }
        return(Math.max(robbing(n1),robbing(n2)));
    }
}
