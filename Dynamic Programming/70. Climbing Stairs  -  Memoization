class Solution {
    public int climbing(int n,int[] dp){
        if(n<=2) return n;
        if(dp[n]!=0) return dp[n];
        int a = climbing(n-1,dp);
        int b = climbing(n-2,dp);
        dp[n] = a+b;
        return dp[n];
    }
    public int climbStairs(int n) {
        int[] dp = new int[n+1];
        return climbing(n,dp);
    }
}
FOR CLEAR EXPLANATION, INTUTION, APPROACH AND TIME-SPACE COMPLEXITY -
https://leetcode.com/problems/climbing-stairs/solutions/7106799/easy-solution-java-0ms-100-beats-memoiza-fyyg/
