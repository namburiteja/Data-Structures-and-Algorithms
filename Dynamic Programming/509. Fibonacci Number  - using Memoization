class Solution {
    public int fibonacci(int n,int[] dp){
        if(n<=1){
            return n;
        }
        if(dp[n]!=-1){
            return dp[n];
        }
        int a = fibonacci(n-1,dp);
        int b = fibonacci(n-2,dp);
        dp[n] = a+b;
        return dp[n];
    }
    public int fib(int n) {
        int[] dp = new int[n+1];
        for(int i=0;i<n+1;i++){
            dp[i] = -1;
        }
        return fibonacci(n,dp);
    }
}
FOR CLEAR EXPLANATION, INTUTION, APPROACH AND TIME-SPACE COMPLEXITY -
https://leetcode.com/problems/fibonacci-number/solutions/7103598/easy-solution-java-using-memoization-app-t7ek/
